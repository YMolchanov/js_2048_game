{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * It includes full logic for 2048 gameplay.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.size = 4;\n        this.score = 0;\n        this.status = \"idle\"; // 'idle', 'playing', 'win', 'lose'\n        this.board = initialState || this.createEmptyBoard();\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            /**\n   * Creates an empty 4x4 board.\n   * @returns {number[][]}\n   */ key: \"createEmptyBoard\",\n            value: function createEmptyBoard() {\n                var _this = this;\n                return Array.from({\n                    length: this.size\n                }, function() {\n                    return Array(_this.size).fill(0);\n                });\n            }\n        },\n        {\n            /**\n   * Returns current board state.\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            /**\n   * Returns current score.\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * Returns current game status.\n   * @returns {'idle' | 'playing' | 'win' | 'lose'}\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.board = this.createEmptyBoard();\n                this.score = 0;\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        },\n        {\n            /**\n   * Adds a random tile (2 or 4) to an empty cell.\n   */ key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var row = 0; row < this.size; row++){\n                    for(var col = 0; col < this.size; col++)if (this.board[row][col] === 0) emptyCells.push([\n                        row,\n                        col\n                    ]);\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), randRow = _emptyCells_Math_floor[0], randCol = _emptyCells_Math_floor[1];\n                this.board[randRow][randCol] = Math.random() < 0.1 ? 4 : 2;\n            }\n        },\n        {\n            /**\n   * Moves tiles left.\n   * @returns {boolean}\n   */ key: \"moveLeft\",\n            value: function moveLeft() {\n                return this.move(\"left\");\n            }\n        },\n        {\n            /**\n   * Moves tiles right.\n   * @returns {boolean}\n   */ key: \"moveRight\",\n            value: function moveRight() {\n                return this.move(\"right\");\n            }\n        },\n        {\n            /**\n   * Moves tiles up.\n   * @returns {boolean}\n   */ key: \"moveUp\",\n            value: function moveUp() {\n                return this.move(\"up\");\n            }\n        },\n        {\n            /**\n   * Moves tiles down.\n   * @returns {boolean}\n   */ key: \"moveDown\",\n            value: function moveDown() {\n                return this.move(\"down\");\n            }\n        },\n        {\n            /**\n   * General move handler.\n   * @param {'left' | 'right' | 'up' | 'down'} direction\n   * @returns {boolean}\n   */ key: \"move\",\n            value: function move(direction) {\n                var _this = this;\n                if (this.status !== \"playing\") return false;\n                var original = JSON.stringify(this.board);\n                var board = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.board);\n                var rotate = function(matrix) {\n                    return matrix[0].map(function(_, i) {\n                        return matrix.map(function(row) {\n                            return row[i];\n                        });\n                    });\n                };\n                var reverse = function(matrix) {\n                    return matrix.map(function(row) {\n                        return row.reverse();\n                    });\n                };\n                if (direction === \"up\") board = rotate(board);\n                if (direction === \"down\") board = reverse(rotate(board));\n                if (direction === \"right\") board = reverse(board);\n                board = board.map(function(row) {\n                    return _this.mergeRow(row);\n                });\n                if (direction === \"up\") board = rotate(board);\n                if (direction === \"down\") board = rotate(reverse(board));\n                if (direction === \"right\") board = reverse(board);\n                var moved = JSON.stringify(board) !== original;\n                if (moved) {\n                    this.board = board;\n                    this.addRandomTile();\n                    if (!this.canMove()) this.status = \"lose\";\n                }\n                return moved;\n            }\n        },\n        {\n            /**\n   * Merges a single row according to 2048 rules.\n   * @param {number[]} row\n   * @returns {number[]}\n   */ key: \"mergeRow\",\n            value: function mergeRow(row) {\n                var filtered = row.filter(function(val) {\n                    return val !== 0;\n                });\n                var merged = [];\n                var i = 0;\n                while(i < filtered.length)if (filtered[i] === filtered[i + 1]) {\n                    var newVal = filtered[i] * 2;\n                    merged.push(newVal);\n                    this.score += newVal;\n                    if (newVal === 2048) this.status = \"win\";\n                    i += 2;\n                } else {\n                    merged.push(filtered[i]);\n                    i++;\n                }\n                while(merged.length < this.size)merged.push(0);\n                return merged;\n            }\n        },\n        {\n            /**\n   * Checks if any moves are possible.\n   * @returns {boolean}\n   */ key: \"canMove\",\n            value: function canMove() {\n                for(var row = 0; row < this.size; row++)for(var col = 0; col < this.size; col++){\n                    var val = this.board[row][col];\n                    if (val === 0) return true;\n                    if (row < this.size - 1 && val === this.board[row + 1][col]) return true;\n                    if (col < this.size - 1 && val === this.board[row][col + 1]) return true;\n                }\n                return false;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$scoreEl = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$startMsg = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$winMsg = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$loseMsg = document.querySelector(\".message-lose\");\nfunction $197cd56b15c33885$var$updateUI() {\n    var state = $197cd56b15c33885$var$game.getState();\n    $197cd56b15c33885$var$cells.forEach(function(cell, i) {\n        var val = state[Math.floor(i / 4)][i % 4];\n        cell.textContent = val === 0 ? \"\" : val;\n        cell.className = \"field-cell\";\n        if (val) cell.classList.add(\"field-cell--\".concat(val));\n    });\n    $197cd56b15c33885$var$scoreEl.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$winMsg.classList.toggle(\"hidden\", $197cd56b15c33885$var$game.getStatus() !== \"won\");\n    $197cd56b15c33885$var$loseMsg.classList.toggle(\"hidden\", $197cd56b15c33885$var$game.getStatus() !== \"lose\");\n}\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$updateUI();\n    $197cd56b15c33885$var$startMsg.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n    $197cd56b15c33885$var$startBtn.classList.remove(\"start\");\n    $197cd56b15c33885$var$startBtn.classList.add(\"restart\");\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var moved = false;\n    if (e.key === \"ArrowLeft\") moved = $197cd56b15c33885$var$game.moveLeft();\n    if (e.key === \"ArrowRight\") moved = $197cd56b15c33885$var$game.moveRight();\n    if (e.key === \"ArrowUp\") moved = $197cd56b15c33885$var$game.moveUp();\n    if (e.key === \"ArrowDown\") moved = $197cd56b15c33885$var$game.moveDown();\n    if (moved) $197cd56b15c33885$var$updateUI();\n});\n\n})();\n//# sourceMappingURL=index.54fa6f3b.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\n// const Game = require('../modules/Game.class');\n// const game = new Game();\n\n// Write your code here\nconst Game = require('../modules/Game.class');\n\nconst game = new Game();\nconst cells = document.querySelectorAll('.field-cell');\nconst scoreEl = document.querySelector('.game-score');\nconst startBtn = document.querySelector('.button');\nconst startMsg = document.querySelector('.message-start');\nconst winMsg = document.querySelector('.message-win');\nconst loseMsg = document.querySelector('.message-lose');\n\nfunction updateUI() {\n  const state = game.getState();\n\n  cells.forEach((cell, i) => {\n    const val = state[Math.floor(i / 4)][i % 4];\n\n    cell.textContent = val === 0 ? '' : val;\n    cell.className = 'field-cell';\n\n    if (val) {\n      cell.classList.add(`field-cell--${val}`);\n    }\n  });\n\n  scoreEl.textContent = game.getScore();\n  winMsg.classList.toggle('hidden', game.getStatus() !== 'won');\n  loseMsg.classList.toggle('hidden', game.getStatus() !== 'lose');\n}\n\nstartBtn.addEventListener('click', () => {\n  game.start();\n  updateUI();\n  startMsg.classList.add('hidden');\n  startBtn.textContent = 'Restart';\n  startBtn.classList.remove('start');\n  startBtn.classList.add('restart');\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  let moved = false;\n\n  if (e.key === 'ArrowLeft') {\n    moved = game.moveLeft();\n  }\n\n  if (e.key === 'ArrowRight') {\n    moved = game.moveRight();\n  }\n\n  if (e.key === 'ArrowUp') {\n    moved = game.moveUp();\n  }\n\n  if (e.key === 'ArrowDown') {\n    moved = game.moveDown();\n  }\n\n  if (moved) {\n    updateUI();\n  }\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * It includes full logic for 2048 gameplay.\n */\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   * @param {number[][]} initialState\n   */\n  constructor(initialState) {\n    this.size = 4;\n    this.score = 0;\n    this.status = 'idle'; // 'idle', 'playing', 'win', 'lose'\n    this.board = initialState || this.createEmptyBoard();\n  }\n\n  /**\n   * Creates an empty 4x4 board.\n   * @returns {number[][]}\n   */\n  createEmptyBoard() {\n    return Array.from({ length: this.size }, () => Array(this.size).fill(0));\n  }\n\n  /**\n   * Returns current board state.\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board;\n  }\n\n  /**\n   * Returns current score.\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * Returns current game status.\n   * @returns {'idle' | 'playing' | 'win' | 'lose'}\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.board = this.createEmptyBoard();\n    this.score = 0;\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.start();\n  }\n\n  /**\n   * Adds a random tile (2 or 4) to an empty cell.\n   */\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push([row, col]);\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const [randRow, randCol] =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[randRow][randCol] = Math.random() < 0.1 ? 4 : 2;\n  }\n\n  /**\n   * Moves tiles left.\n   * @returns {boolean}\n   */\n  moveLeft() {\n    return this.move('left');\n  }\n\n  /**\n   * Moves tiles right.\n   * @returns {boolean}\n   */\n  moveRight() {\n    return this.move('right');\n  }\n\n  /**\n   * Moves tiles up.\n   * @returns {boolean}\n   */\n  moveUp() {\n    return this.move('up');\n  }\n\n  /**\n   * Moves tiles down.\n   * @returns {boolean}\n   */\n  moveDown() {\n    return this.move('down');\n  }\n\n  /**\n   * General move handler.\n   * @param {'left' | 'right' | 'up' | 'down'} direction\n   * @returns {boolean}\n   */\n  move(direction) {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    const original = JSON.stringify(this.board);\n    let board = [...this.board];\n\n    const rotate = (matrix) =>\n      matrix[0].map((_, i) => matrix.map((row) => row[i]));\n    const reverse = (matrix) => matrix.map((row) => row.reverse());\n\n    if (direction === 'up') {\n      board = rotate(board);\n    }\n\n    if (direction === 'down') {\n      board = reverse(rotate(board));\n    }\n\n    if (direction === 'right') {\n      board = reverse(board);\n    }\n\n    board = board.map((row) => this.mergeRow(row));\n\n    if (direction === 'up') {\n      board = rotate(board);\n    }\n\n    if (direction === 'down') {\n      board = rotate(reverse(board));\n    }\n\n    if (direction === 'right') {\n      board = reverse(board);\n    }\n\n    const moved = JSON.stringify(board) !== original;\n\n    if (moved) {\n      this.board = board;\n      this.addRandomTile();\n\n      if (!this.canMove()) {\n        this.status = 'lose';\n      }\n    }\n\n    return moved;\n  }\n\n  /**\n   * Merges a single row according to 2048 rules.\n   * @param {number[]} row\n   * @returns {number[]}\n   */\n  mergeRow(row) {\n    const filtered = row.filter((val) => val !== 0);\n    const merged = [];\n    let i = 0;\n\n    while (i < filtered.length) {\n      if (filtered[i] === filtered[i + 1]) {\n        const newVal = filtered[i] * 2;\n\n        merged.push(newVal);\n        this.score += newVal;\n\n        if (newVal === 2048) {\n          this.status = 'win';\n        }\n        i += 2;\n      } else {\n        merged.push(filtered[i]);\n        i++;\n      }\n    }\n\n    while (merged.length < this.size) {\n      merged.push(0);\n    }\n\n    return merged;\n  }\n\n  /**\n   * Checks if any moves are possible.\n   * @returns {boolean}\n   */\n  canMove() {\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        const val = this.board[row][col];\n\n        if (val === 0) {\n          return true;\n        }\n\n        if (row < this.size - 1 && val === this.board[row + 1][col]) {\n          return true;\n        }\n\n        if (col < this.size - 1 && val === this.board[row][col + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","TypeError","size","score","status","board","createEmptyBoard","key","value","_this","fill","addRandomTile","start","emptyCells","row","col","push","_emptyCells_Math_floor","isArray","Math","floor","random","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","err","randRow","randCol","move","direction","original","JSON","stringify","iter","rotate","matrix","map","_","reverse","mergeRow","moved","canMove","filtered","filter","val","merged","newVal","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$scoreEl","querySelector","$197cd56b15c33885$var$startBtn","$197cd56b15c33885$var$startMsg","$197cd56b15c33885$var$winMsg","$197cd56b15c33885$var$loseMsg","$197cd56b15c33885$var$updateUI","state","getState","forEach","cell","textContent","className","classList","add","concat","getScore","toggle","getStatus","addEventListener","remove","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.54fa6f3b.js.map"}